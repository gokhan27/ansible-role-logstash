# Tag logs we want to exclude from being shipped to the central elasticsearch
# instance.
filter {
  if "audit" in [tags] {
    mutate {
      add_tag => [ "log-aggr-exclude" ]
    }
  }
  if "libvirt" in [tags] {
    mutate {
      add_tag => [ "log-aggr-exclude" ]
    }
  }
  if "lxc" in [tags] {
    mutate {
      add_tag => [ "log-aggr-exclude" ]
    }
  }
  if "apache" in [tags] {
    mutate {
      add_tag => [ "log-aggr-exclude" ]
    }
  }
  if "apache-access" in [tags] {
    mutate {
      add_tag => [ "log-aggr-exclude" ]
    }
  }
  if "nginx" in [tags] {
    mutate {
      add_tag => [ "log-aggr-exclude" ]
    }
  }
}


# Make sure all logs that are being shipped out have a tenant_id field
filter {
  if 'log-aggr-exclude' not in [tags] {
    mutate {
      add_field => { "tenant_id" => "{{ log_aggr_account_id }}" }
    }
  }
}

# Leave logdate as text to make it easy to see customer timezone
# Create a logdate_ts for ease of filtering and sorting. It also
# makes it easier to see the same entry in the kibana TZ if it
# differs
filter {
  date {
     match => [ "logdate", "yyyy-MM-dd HH:mm:ss.SSS", "yyyy-MM-dd HH:mm:ss.SSSZ" ]
     target => "logdate_timestamp"
  }
}

# Only ship logs that have not been tagged with log-aggr-exclude
output {
  if 'log-aggr-exclude' not in [tags] {
    elasticsearch {
      template_overwrite => true
{% if log_aggr_enable_ssl %}
      ssl => true
      ssl_certificate_verification => false
{% endif %}
      hosts => "{{ log_aggr_central_es_host }}:{{ log_aggr_central_es_port }}"
{% if log_aggr_pipeline is defined %}
      pipeline => "{{ log_aggr_pipeline }}"
{% endif %}
    }
  }
}